{"version":3,"sources":["Navbar.js","TextForm.js","About.js","Alert.js","App.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","text","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","About","myStyle","borderColor","aria-labelledby","data-bs-parent","defaultProps","Alert","height","alert","word","lower","charAt","slice","capitalize","message","App","setMode","_useState3","_useState4","setAlert","setInterval","Router","document","body","Routes","Route","path","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"iPAGe,SAASA,EAAOC,GAC7B,OACEC,IAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCJ,EAAMK,KAAI,QAAAD,OAAOJ,EAAMK,OACvEJ,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAACI,IAAI,CAACH,UAAU,eAAeI,GAAG,KAAKP,EAAMQ,OAC7CP,IAAAC,cAAA,UAAQC,UAAU,iBAAiBM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAC1Lb,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BY,GAAG,0BAC3Cd,IAAAC,cAAA,MAAIC,UAAU,mCACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAACI,IAAI,CAACH,UAAU,WAAWa,eAAa,OAAOT,GAAG,KAAI,SAExDN,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAACI,IAAI,CAACH,UAAU,WAAWI,GAAG,UAAUP,EAAMiB,QAYlDhB,IAAAC,cAAA,OAAKC,UAAS,+BAAAC,OAAgD,UAAdJ,EAAMK,KAAgB,OAAO,UAC3EJ,IAAAC,cAAA,SAAOC,UAAU,mBAAmBM,KAAK,WAAWS,KAAK,SAASH,GAAG,yBAAyBI,QAAUnB,EAAMoB,aAC9GnB,IAAAC,cAAA,SAAOC,UAAU,mBAAmBkB,QAAQ,0BAAyB,UAAsB,UAAdrB,EAAMK,KAAgB,OAAO,QAAQ,aC7B/G,SAASiB,EAAStB,GAC7B,IAmCCuB,EACuBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BN,EAAIQ,EAAA,GAAEE,EAAOF,EAAA,GACpB,OACIxB,IAAAC,cAAAD,IAAA2B,SAAA,KACI3B,IAAAC,cAAA,OAAKC,UAAU,QAAQ0B,MAAO,CAAEC,MAAsB,UAAf9B,EAAMK,KAAmB,QAAU,UACtEJ,IAAAC,cAAA,SAAOmB,QAAQ,WAAWlB,UAAU,cAAaF,IAAAC,cAAA,UAAKF,EAAM+B,UAC5D9B,IAAAC,cAAA,YAAUC,UAAU,eAAe6B,MAAOf,EAAMgB,SAzCrC,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QAuC6DjB,GAAG,WAAWc,MAAO,CAAEO,gBAAgC,UAAfpC,EAAMK,KAAmB,QAAU,UAAWyB,MAAsB,UAAf9B,EAAMK,KAAmB,QAAU,SAAWgC,KAAK,OAC1NpC,IAAAC,cAAA,UAAQoC,SAAyB,IAAdrB,EAAKsB,OAAWpC,UAAU,wBAAwBgB,QAtC3D,WAElB,IAAIqB,EAAUvB,EAAKwB,cACnBd,EAAQa,GACRxC,EAAM0C,UAAU,yBAA0B,aAkC2D,wBAC7FzC,IAAAC,cAAA,UAAQoC,SAAyB,IAAdrB,EAAKsB,OAAYpC,UAAU,4BAA4BgB,QA3BhE,WAElB,IAAIqB,EAAUvB,EAAK0B,cACnBhB,EAAQa,GACRxC,EAAM0C,UAAU,yBAA0B,aAuBgE,wBAClGzC,IAAAC,cAAA,UAAQoC,SAAyB,IAAdrB,EAAKsB,OAAWpC,UAAU,4BAA4BgB,QAlC5D,WAGrBQ,EADc,IAEd3B,EAAM0C,UAAU,eAAgB,aA8B4E,cACpGzC,IAAAC,cAAA,UAAQoC,SAAyB,IAAdrB,EAAKsB,OAAYpC,UAAU,4BAA4BgB,QAvB9D,WAMpByB,UAAUC,UAAUC,UAAU7B,GAC9BjB,EAAM0C,UAAU,cAAe,aAgB6E,aACpGzC,IAAAC,cAAA,UAAQoC,SAAyB,IAAdrB,EAAKsB,OAAWpC,UAAU,4BAA4BgB,QAf3D,WACtB,IAAIqB,EAAUvB,EAAK8B,MAAM,QACzBpB,EAAQa,EAAQQ,KAAK,MACrBhD,EAAM0C,UAAU,uBAAwB,aAYqE,wBAEzGzC,IAAAC,cAAA,OAAKC,UAAU,kBAAkB0B,MAAO,CAAEC,MAAsB,UAAf9B,EAAMK,KAAmB,QAAU,UAChFJ,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,SAAIe,EAAK8B,MAAM,OAAOE,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQX,SAAaA,OAAO,cAAYtB,EAAKsB,OAAO,eAAYtC,IAAAC,cAAA,WAC3G,KAAQe,EAAK8B,MAAM,OAAOE,OAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQX,SAAaA,OAAO,qBACrFtC,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAIe,EAAKsB,OAAS,EAAItB,EAAO,wBCtD9B,SAASkC,EAAMnD,GAC1B,IAAMoD,EAAS,CACXtB,MAAqB,SAAf9B,EAAMK,KAAgB,QAAQ,QACpC+B,gBAA+B,SAAfpC,EAAMK,KAAgB,UAAU,QAChDgD,YAA0B,SAAdrD,EAAMK,KAAe,QAAQ,SAwB7C,OACIJ,IAAAC,cAAAD,IAAA2B,SAAA,KACI3B,IAAAC,cAAA,OAAKC,UAAU,YAAY0B,MAAOuB,GAC9BnD,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,OAAKC,UAAU,YAAYY,GAAG,oBAC1Bd,IAAAC,cAAA,OAAKC,UAAU,iBAAiB0B,MAAOuB,GACnCnD,IAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,cAChCd,IAAAC,cAAA,UAAQC,UAAU,mBAAmBM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeE,gBAAc,OAAOD,gBAAc,cAAciB,MAAOuB,GAChKnD,IAAAC,cAAA,cAAQ,yBAGfD,IAAAC,cAAA,OAAKa,GAAG,cAAcZ,UAAU,mCAAmCmD,kBAAgB,aAAaC,iBAAe,qBAC3GtD,IAAAC,cAAA,OAAKC,UAAU,iBAAiB0B,MAAOuB,GAAS,iFAKxDnD,IAAAC,cAAA,OAAKC,UAAU,iBAAiB0B,MAAOuB,GACnCnD,IAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,cAChCd,IAAAC,cAAA,UAAQC,UAAU,6BAA6BM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,eAAeE,gBAAc,QAAQD,gBAAc,cAAciB,MAAOuB,GAC3KnD,IAAAC,cAAA,cAAQ,mBAGfD,IAAAC,cAAA,OAAKa,GAAG,cAAcZ,UAAU,8BAA8BmD,kBAAgB,aAAaC,iBAAe,qBACtGtD,IAAAC,cAAA,OAAKC,UAAU,iBAAiB0B,MAAOuB,GAAS,kPAKxDnD,IAAAC,cAAA,OAAKC,UAAU,iBAAiB0B,MAAOuB,GACnCnD,IAAAC,cAAA,MAAIC,UAAU,mBAAmBY,GAAG,gBAChCd,IAAAC,cAAA,UAAQC,UAAU,6BAA6BM,KAAK,SAASC,iBAAe,WAAWC,iBAAe,iBAAiBE,gBAAc,QAAQD,gBAAc,gBAAgBiB,MAAOuB,GAC/KnD,IAAAC,cAAA,cAAQ,0BAGfD,IAAAC,cAAA,OAAKa,GAAG,gBAAgBZ,UAAU,8BAA8BmD,kBAAgB,eAAeC,iBAAe,qBAC1GtD,IAAAC,cAAA,OAAKC,UAAU,iBAAiB0B,MAAOuB,GAAS,wNF5B5ErD,EAAOyD,aAAe,CACpBhD,MAAO,eACPS,KAAM,eGvBOwC,MAff,SAAezD,GAKX,OACGC,IAAAC,cAAA,OAAM2B,MAAQ,CAAC6B,OAAO,SACpB1D,EAAM2D,OAAO1D,IAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAkBJ,EAAM2D,MAAMlD,KAAI,gCAAgCS,KAAM,SACjGjB,IAAAC,cAAA,cAPY,SAAC0D,GACnB,IAAMC,EAAQD,EAAKjB,cACnB,OAAOkB,EAAMC,OAAO,GAAGrB,cAAcoB,EAAME,MAAM,GAKlCC,CAAWhE,EAAM2D,MAAMlD,OAAe,MAAIT,EAAM2D,MAAMM,kBCsD3DC,MAjDf,WAAe,IAAA3C,EACWC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAAlClB,EAAIoB,EAAA,GAAE0C,EAAO1C,EAAA,GAAA2C,EACM5C,mBAAS,MAAK6C,EAAA3C,YAAA0C,EAAA,GAAjCT,EAAKU,EAAA,GAAEC,EAAQD,EAAA,GAChB3B,EAAY,SAACuB,EAASxD,GAC1B6D,EAAS,CACPL,QAASA,EACTxD,KAAMA,IAER8D,YAAY,WACVD,EAAS,OACR,MAwBL,OAEErE,IAAAC,cAACsE,IAAM,KACLvE,IAAAC,cAACH,EAAM,CAACS,MAAM,gBAAgBS,KAAK,QAAQZ,KAAMA,EAAMe,WAvBxC,WACJ,UAATf,GACF8D,EAAQ,QACRM,SAASC,KAAK7C,MAAMO,gBAAkB,UACtCM,EAAU,6BAA8B,aAUxCyB,EAAQ,SACRM,SAASC,KAAK7C,MAAMO,gBAAkB,QACtCM,EAAU,8BAA+B,eAQzCzC,IAAAC,cAACuD,EAAK,CAACE,MAAOA,IACd1D,IAAAC,cAAA,OAAMC,UAAU,kBACdF,IAAAC,cAACyE,IAAM,KACL1E,IAAAC,cAAC0E,IAAK,CAACC,KAAK,SAAS3B,QAASjD,IAAAC,cAACiD,EAAK,CAAC9C,KAAMA,MAC3CJ,IAAAC,cAAC0E,IAAK,CAACC,KAAK,IAAI3B,QAASjD,IAAAC,cAACoB,EAAQ,CAACoB,UAAWA,EAAWX,QAAQ,4EAA4E1B,KAAMA,UCpDhJyE,IAASC,WAAWN,SAASO,eAAe,SACpDC,OACHhF,IAAAC,cAACD,IAAMiF,WAAU,KACfjF,IAAAC,cAACgE,EAAG","file":"static/js/main.590820aa.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">HOME</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.text}</Link>\r\n\r\n            </li>\r\n          </ul>\r\n\r\n          {\r\n          /* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n        \r\n          <div className= {`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick ={props.toggleMode} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode ==='light'?'dark':'light'} mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'Type a title',\r\n  text: 'Type a text'\r\n};\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  text: PropTypes.string\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleonChange = (event) => {\r\n        // console.log(\"You clicked on onchange\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", 'success');\r\n    }\r\n    const handleclearClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\", 'success');\r\n    }\r\n    const handleDnClick = () => {\r\n        // console.log(\"Lowercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", 'success');\r\n    }\r\n    const handleCopyClick = () => {\r\n        //console.log(\"Copy Text was clicked\");\r\n        // let text = document.getElementById(\"textArea\");\r\n        // text.select();\r\n        // navigator.clipboard.writeText(text.value);\r\n        // document.getSelection().removeAllRanges();\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text copied\", 'success');\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\", 'success');\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"mb-3 \" style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <label htmlFor=\"textArea\" className=\"form-label\"><h2>{props.heading}</h2></label>\r\n                <textarea className=\"form-control\" value={text} onChange={handleonChange} id=\"textArea\" style={{ backgroundColor: props.mode === 'light' ? 'white' : '#253c60', color: props.mode === 'light' ? 'black' : 'white' }} rows=\"10\"></textarea>\r\n                <button disabled= {text.length===0}className=\"btn btn-primary my-3 \" onClick={handleUpClick}>Convert To Uppercase</button>\r\n                <button disabled= {text.length===0} className=\"btn btn-primary my-3 mx-2\" onClick={handleDnClick}>Convert To Lowercase</button>\r\n                <button disabled= {text.length===0}className=\"btn btn-primary my-3 mx-2\" onClick={handleclearClick}>Clear Text</button>\r\n                <button disabled= {text.length===0} className=\"btn btn-primary my-3 mx-2\" onClick={handleCopyClick}>Copy Text</button>\r\n                <button disabled= {text.length===0}className=\"btn btn-primary my-3 mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3 \" style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n                <h6>YOUR TEXT SUMMARY</h6>\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters <br></br>\r\n                    {0.008 * text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} minutes to read </p>\r\n                <h6>PREVIEW</h6>\r\n                <p>{text.length > 0 ? text : 'Nothing to preview'}</p>\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import React ,{useState}from 'react'\r\n\r\nexport default function About(props) {\r\n    const myStyle ={\r\n        color:props.mode === 'dark'?'white':'black',\r\n        backgroundColor:props.mode === 'dark'?'#172e46':'white',\r\n        borderColor:props.mode ==='dark'?'white':'black'\r\n    }\r\n    \r\n//     const [myStyle,setMyStyle] = useState({\r\n//         color: \"black\",\r\n//     backgroundColor: \"white\"\r\n// });\r\n// const[btnText,setBtnText] = useState('Enable Dark Mode');\r\n// const toggleStyle = ()=>{\r\n// if(myStyle.color === 'white'){\r\n//     setMyStyle({\r\n//         color: \"black\",\r\n//     backgroundColor: \"white\"\r\n// });\r\n// setBtnText('Enable Dark Mode');\r\n// }\r\n// else{\r\n//     setMyStyle({\r\n//         color: \"white\",\r\n//     backgroundColor: \"black\"\r\n// });\r\n// setBtnText('Enable Light Mode');\r\n// }\r\n// }\r\n    return (\r\n        <>\r\n            <div className='container' style={myStyle}>\r\n                <h2>ABOUT US</h2>\r\n                <div className=\"accordion\" id=\"accordionExample\" >\r\n                    <div className=\"accordion-item\" style={myStyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                               <strong>1.Analyze Your Text</strong> \r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                TextUtilsella gives you a way to analyze your text quickly and efficiently.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={myStyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                               <strong>2.Free to use</strong> \r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                TextUtilsella is a free character counter tool that provides instant character count statistics for a given text. TextUtilsella reports the number of words and characters. Thus, it is suitable for writing text with word/character limit. \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" style={myStyle}>\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                               <strong>3.Browser Compatible</strong> \r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                This word counter software works in any web browsers such as Chrome, Firfox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays etc.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"container my-3\">\r\n                    <button onClick = {toggleStyle} className=\"btn btn-primary\" >{btnText}</button>\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n     const lower = word.toLowerCase();\r\n     return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n       <div  style ={{height:'50px'}}>\r\n        {props.alert&&<div className= {`alert alert-${props.alert.type} alert-dismissible fade show`} role= \"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message} \r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './Navbar';\nimport TextForm from './TextForm';\nimport React, { useState } from 'react';\nimport About from './About';\nimport Alert from './Alert';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    });\n    setInterval(() => {\n      setAlert(null);\n    }, 3000);\n\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#172e46';\n      showAlert('Dark mode has been enabled', 'success');\n      //document.title = \"TextUtils - Dark Mode\"\n      // setInterval(()=>{\n      //   document.title =\"TextUtils is really amazing\";\n      // },2000);\n      // setInterval(()=>{\n      //   document.title =\"Install TextUtils\";\n      // },1500);\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n      // document.title = \"TextUtils - Light Mode\"\n    }\n  }\n  return (\n\n    <Router>\n      <Navbar title='TextUtilsella' text='ABOUT' mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      < div className=\"container my-3\">\n        <Routes>\n          <Route path=\"/about\" element={<About mode={mode}/>} />\n          <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Try TextUtilsella - Word Counter, Character Counter, Remove extra spaces \" mode={mode} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}